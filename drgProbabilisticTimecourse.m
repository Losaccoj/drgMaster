function drgProbabilisticTimecourse(handles)

% it calls Problick.m (that calculates probability values associated with the
% animal's behaviour) and Simrand.m (that generates simulations of randomly
% behaving animals), then plots the probability curves.

% A= [ 1 1 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 1 0 0 1 0 1 0 1 0 1 1 0 1 0 0 1 ]
% B= [ 1 0 0 1 0 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 0 1 1 0 1 0 0 1 ]
% times=1:10:370;

odorOn=2;
splus=5;
hit=3;
miss=7;
CR=9;
FA=13;
sminus=11;

sessionNo=handles.drg.unit(handles.unitNo).sessionNo;

splus_or_minus=[];
animal_licked=[];

for ii=1:handles.drg.session(sessionNo).events(odorOn).noTimes
    times(ii)=handles.drg.session(sessionNo).events(odorOn).times(ii);
    if sum(handles.drg.session(sessionNo).events(odorOn).times(ii)==handles.drg.session(sessionNo).events(splus).times)>0
        %This is S+
        splus_or_minus(ii)=1;
        if sum(handles.drg.session(sessionNo).events(odorOn).times(ii)==handles.drg.session(sessionNo).events(hit).times)>0
            %Animal licked
            animal_licked(ii)=1;
        else
            animal_licked(ii)=0;
        end
    else
        %This is S-
        splus_or_minus(ii)=0;
        if sum(handles.drg.session(sessionNo).events(odorOn).times(ii)==handles.drg.session(sessionNo).events(FA).times)>0
            %Animal licked
            animal_licked(ii)=1;
        else
            animal_licked(ii)=0;
        end
    end
end
   
Behavior.lick = animal_licked;
Behavior.avail =  splus_or_minus;
Behavior.time = times;
blocktimes=[];
blocklabels=[];
lenlick = length(Behavior.lick);
for u=1:(lenlick/20)
    blocktimes(end+1) = times(20*u);
    blocklabels(end+1) = u;
    u=u+1;
end

% creates the gonogo structure

gonogo.lick = animal_licked;
gonogo.avail = splus_or_minus;
gonogo.time =times;
gonogo.proba = [];
gonogo.avesim =[];
gonogo.prctile5 =[];
gonogo.graphHit =[];
gonogo.graphFA =[];
gonogo.graphCR = [];
gonogo.graphMiss =[];
gonogo.criterion =[];
gonogo.blocktimes =[];
gonogo.progress=[];
gonogo.graphlick = [];
gonogo.graphhit = [];
gonogo.graphFA = [];

gonogo.wilcoxon=[];
gonogo.wilcoxon(1:20)=ones;




%% 
%calculates probabilities associated with the behavior (calling probLick)
%and with the random simulations generated by calling Simrand

gonogo.proba = drgProbLick(gonogo.lick, gonogo.avail);
[gonogo.avesim,gonogo.prctile5] = drgSimRand(gonogo.lick,gonogo.avail);
gonogo.graphHit = gonogo.lick & gonogo.avail;
gonogo.graphFA =gonogo.lick & ~gonogo.avail;
gonogo.graphCR = ~gonogo.lick & ~gonogo.avail;
gonogo.graphMiss = ~gonogo.lick & gonogo.avail;
%gonogo.criterion = perCor;
gonogo.blocktimes = blocktimes;
gonogo.progress = ((35.*(gonogo.avesim - gonogo.proba))./(gonogo.avesim - gonogo.prctile5))+50;
% 
% for o=1:lenlick-20
% %     if sum(gonogo.proba(o:o+20)) <= sum(gonogo.prctile5(o:o+20))
%     gonogo.wilcoxon(o+20) = ranksum(gonogo.prctile5(o:o+20),gonogo.proba(o:o+20)) 
% %     else gonogo.wilcoxon(o+20) = 0.5
% %     end
% end

%%
gonogo.graphproba=[];
for p=1:lenlick/20
   gonogo.graphproba(p)= gonogo.proba(20*p);
end
str = num2str(gonogo.graphproba,3);
%%
%calculates intertrial intervals and build the distribution by 5 sec
%increments
% 
gonogo.intertrial=[];
for j=2:lenlick
    gonogo.intertrial(j)=gonogo.time(j)-gonogo.time(j-1);
    j=j+1;
end
hist_intertrial= histc(gonogo.intertrial,[5 10 15 20 25 30 35 40 45 50 100])
% 
% dimensions = size(gonogo.lick);
gonogo.deltaP=[];

for k=2:lenlick
    gonogo.deltaP(k)=gonogo.proba(k)-gonogo.proba(k-1);
    k=k+1;
end




%creates figure for probability vs time  
try
    close 1
catch
end

hFig1 = figure(1);
set(hFig1, 'units','normalized','position',[.05 .15 .85 .3])



hold('all');
plot(gonogo.time,gonogo.proba,'-r','LineWidth',2);
plot(gonogo.time,gonogo.avesim,'-k','LineWidth',1);
plot(gonogo.time,gonogo.prctile5,'--k','LineWidth',1);
plot(gonogo.time(gonogo.graphHit==1),gonogo.graphHit(gonogo.graphHit==1)+.05,' vg', 'MarkerFaceColor','g', 'MarkerSize',5);
plot(gonogo.time(gonogo.graphMiss==1),gonogo.graphMiss(gonogo.graphMiss==1)+.05,' vr','MarkerFaceColor','r', 'MarkerSize',2);
plot(gonogo.time(gonogo.graphFA==1),gonogo.graphFA(gonogo.graphFA==1)+.15,' vr','MarkerFaceColor','r', 'MarkerSize',5);
plot(gonogo.time(gonogo.graphCR==1),gonogo.graphCR(gonogo.graphCR==1)+.15,' vg', 'MarkerFaceColor','g', 'MarkerSize',2);
ax=gca;
set(ax,'YTick',[0.05 .5 1]);
xlim([0 gonogo.time(end)])
ylim([0 1.25])
ylabel('Probability')
xlabel('Time (sec)')
plot([gonogo.time(1) gonogo.time(end)],[0.05 0.05],'--k');
plot([gonogo.time(1) gonogo.time(end)],[0.5 0.5],'--k');
title 'probability associated with the observed behavior(thick red line) average(black line) and 5th percentile(dotted black line) random behavior' 

%creates figure for probability vs trial number 
try
    close 2
catch
end

hFig2 = figure(2);
set(hFig2, 'units','normalized','position',[.05 .55 .85 .3])



hold('all');
trials=[1:length(gonogo.time)];
plot(trials,gonogo.proba,'-r','LineWidth',2);
plot(trials,gonogo.avesim,'-k','LineWidth',1);
plot(trials,gonogo.prctile5,'--k','LineWidth',1);
plot(trials(gonogo.graphHit==1),gonogo.graphHit(gonogo.graphHit==1)+.05,' vg', 'MarkerFaceColor','g', 'MarkerSize',5);
plot(trials(gonogo.graphMiss==1),gonogo.graphMiss(gonogo.graphMiss==1)+.05,' vr','MarkerFaceColor','r', 'MarkerSize',2);
plot(trials(gonogo.graphFA==1),gonogo.graphFA(gonogo.graphFA==1)+.15,' vr','MarkerFaceColor','r', 'MarkerSize',5);
plot(trials(gonogo.graphCR==1),gonogo.graphCR(gonogo.graphCR==1)+.15,' vg', 'MarkerFaceColor','g', 'MarkerSize',2);
ax=gca;
set(ax,'YTick',[0.05 .5 1]);
xlim([0 trials(end)])
ylim([0 1.25])
ylabel('Probability')
xlabel('Trial No')
plot([0 trials(end)],[0.05 0.05],'--k');
plot([0 trials(end)],[0.5 0.5],'--k');
title 'probability associated with the observed behavior(thick red line) average(black line) and 5th percentile(dotted black line) random behavior' 




